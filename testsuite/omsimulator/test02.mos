// name:     test02.mos
// status:   correct
// teardown_command: rm -rf test02

setCommandLineOptions("-g=MetaModelica");
echo(false);

loadString("
function printStatus
  input Integer status;
  input Integer expected;
protected
  String outstatus;
  String cmp=\" \";
algorithm
  if (status==expected) then
    cmp := \"correct\";
  else
    cmp := \"wrong\";
  end if;
  if 0 == status then
    outstatus := \" ok\";
  elseif 1 == status then
    outstatus := \" warning\";
  elseif 3 == status then
    outstatus := \" error\";
  end if;
  print(\"status:  [\" + cmp  + \"]\" + outstatus);
  print(\"\n\");
end printStatus;

function printType
  input Integer t;
algorithm
  if (Integer(OpenModelica.Scripting.oms_system.oms_system_tlm)-1 == t) then
    print(\"type: oms_system_tlm\");
  elseif (Integer(OpenModelica.Scripting.oms_system.oms_system_wc)-1 == t) then
    print(\"type: oms_system_wc\");
  elseif (Integer(OpenModelica.Scripting.oms_system.oms_system_sc)-1 == t) then
    print(\"type: oms_system_sc\");
  else
    print(\"Unknown type\");
  end if;
  print(\"\n\");
end printType;
");

oms_setCommandLineOption("--suppressPath=true");
oms_setTempDirectory("./test02/");

status := oms_newModel("test");
printStatus(status, 0);

(status,type_):= oms_getSystemType("test");
printType(type_);
printStatus(status,3);

status := oms_addSystem("test.eoo", OpenModelica.Scripting.oms_system.oms_system_tlm);
printStatus(status, 0);

status := oms_addSystem("test.eoo.foo", OpenModelica.Scripting.oms_system.oms_system_wc);
printStatus(status, 0);

status := oms_addSystem("test.eoo.foo.goo", OpenModelica.Scripting.oms_system.oms_system_sc);
printStatus(status, 0);

(status,type_) := oms_getSystemType("test");
printType(type_);
printStatus(status, 3);

(status,type_) := oms_getSystemType("test.eoo");
printType(type_);
printStatus(status, 0);

(status,type_) := oms_getSystemType("test.eoo.foo");
printType(type_);
printStatus(status, 0);

(status,type_) := oms_getSystemType("test.eoo.foo.goo");
printType(type_);
printStatus(status, 0);

status := oms_delete("test");
printStatus(status, 0);

// Result:
// true
// status:  [correct] ok
// error:   [oms_getSystemType] Model "test" does not contain system ""
// Unknown type
// status:  [correct] error
// status:  [correct] ok
// status:  [correct] ok
// status:  [correct] ok
// type: oms_system_tlm
// status:  [wrong] ok
// type: oms_system_tlm
// status:  [correct] ok
// type: oms_system_wc
// status:  [correct] ok
// type: oms_system_sc
// status:  [correct] ok
// status:  [correct] ok
// info:    0 warnings
// info:    1 errors
// endResult
